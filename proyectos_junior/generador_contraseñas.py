import secrets
import string
from typing import Tuple
import os

def caracteres_disponibles():
    letter: str = string.ascii_letters
    digits: str = string.digits
    caracteres: str = string.punctuation
    return letter, digits, caracteres


def tama√±o_contrase√±a():
    """Presentaci√≥n. Pregunta al usuario cu√°l ser√° el tama√±o de su contrase√±a.

        respuestas   -- tuple -- Tiene las respuestas validas 
        menu         -- str   -- Tiene asignado una presentaci√≥n
        tama√±o_one   -- str   -- Pregunta al User s√≠ ese es el tama√±o adecuado
        tama√±o_two   -- str   -- Pregunta al User s√≠ ese es el tama√±o adecuado
        tama√±o_three -- str   -- Pregunta al User s√≠ ese es el tama√±o adecuado
        reinicio     -- str   -- Pregunta al User s√≠ quiere volver al inicio
    
    Retorna el tama√±o de la contrase√±a, que elegi√≥ el usuario.
    
    """
    respuestas: Tuple = ("yes", "no")
    menu: str = """
        ‚ú®‚ú®‚ú®Bienvenido al mejor generador de contrase√±as‚ú®‚ú®‚ú®
        Tienes las siguientes opciones:
            Tama√±o:
                - 08 Caracteres
                - 12 Caracteres
                - 16 Caracteres
            Tipo:
                - Letras 
                - Numeros
                - Caracteres Especiales
        Para poder elegir entre estas opciones tendras que solo responder:
            - Yes 
            - No
    """
    print(menu)
    while True:
        tama√±o_one: str = input("Usted desea 8 caracteres para su contrase√±a?: ").lower().strip()
        if tama√±o_one.isdigit() or not tama√±o_one in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tama√±o_one == "yes" and tama√±o_one.isalpha():
            return 8

        if tama√±o_one == "no":
            break
    
    while True:
        tama√±o_two: str = input("Usted desea 12 caracteres para su contrase√±a?: ").lower().strip()
        if tama√±o_two.isdigit() or not tama√±o_two in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tama√±o_two == "yes" and tama√±o_two.isalpha():
            return 12
        
        if tama√±o_two == "no":
            break
    
    while True:
        tama√±o_three: str = input("Usted desea 16 caracteres para su contrase√±a?: ").lower().strip()
        if tama√±o_three.isdigit() or not tama√±o_three in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tama√±o_three == "yes" and tama√±o_three.isalpha():
            return 16
        
        if tama√±o_three == "no":
            print('Por favor tienes que elegir el tama√±o de tu contrase√±a')
            while True:
                reinicio: str = input("Quieres volver a empezar? ").lower().strip()
                if reinicio.isdigit() or not reinicio in respuestas:
                    print('Por favor solo ingresa estas opciones "Yes" or "No"')
                    continue
                elif reinicio == "no":
                    print("Por favor eliga una opci√≥n")
                    break
                elif reinicio == "yes":
                    os.system("clear")
                    return tama√±o_contrase√±a()
                
def tipo_contrase√±a():
    """Pregunta al usuario que tipo de contrase√±a quiere se le genere.
    
        respuestas  -- tuple -- Tiene solo las respuestas aceptables 
        tipo        -- dict  -- Almacena 0 para False(no) y 1 para True(si) 
        tipo_one    -- str   -- Pregunta al usuario si quiere letras en su contrase√±a
        tipo_two    -- str   -- Pregunta al usuario si quiere numeros en su contrase√±a
        tipo_three  -- str   -- Pregunta al usuario si quiere caracteres especiales en su contrase√±a
        reinicio    -- str   -- Pregunta si quiere empezar nuevamente a elegir su tipo de contrase√±a
        
    Retorna una lista con 0 y 1, donde el 0 representa False(no) y el 1 representa True(si).
    
    """
    respuestas: Tuple = ("yes", "no")
    tipo: list = []
    while True:
        tipo_one: str = input("Usted desea letras para su contrase√±a?: ").lower().strip()
        if tipo_one.isdigit() or not tipo_one in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tipo_one == "yes" and tipo_one.isalpha():
            tipo.append(1)
            break

        if tipo_one == "no":
            tipo.append(0)
            break
    
    while True:
        tipo_two: str = input("Usted n√∫meros para su contrase√±a?: ").lower().strip()
        if tipo_two.isdigit() or not tipo_two in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tipo_two == "yes" and tipo_two.isalpha():
            tipo.append(1)
            break
        
        if tipo_two == "no":
            tipo.append(0)
            break
    
    while True:
        tipo_three: str = input("Usted desea caracteres especiales para su contrase√±a?: ").lower().strip()
        if tipo_three.isdigit() or not tipo_three in respuestas:
            print('Por favor solo ingresa estas opciones "Yes" or "No"')
            continue
        elif tipo_three == "yes" and tipo_three.isalpha():
            tipo.append(1)
            break

        if tipo_three == "no" and tipo_one == "no" and tipo_two == "no":
            while True:
                reinicio: str = input("Quieres volver a empezar a elegir nuevamente tu tipo de contrase√±a? ").lower().strip()
                if reinicio.isdigit() or not reinicio in respuestas:
                    print('Por favor solo ingresa estas opciones "Yes" or "No"')
                    continue
                elif reinicio == "no":
                    print("Por favor eliga una opci√≥n")
                    break
                elif reinicio == "yes":
                    os.system("clear")
                    return tipo_contrase√±a()
        elif tipo_three == "no":
            tipo.append(0)
            break
    
    return tipo

def generando_contrase√±a(tama√±o, tipo) -> str:
    """Genera la contrase√±a basado en el tama√±o y el tipo que pida el usuario.

        tama√±o              -- int  -- Par√°metro, es el tama√±o que pide el usuario
        tipo                -- list -- Par√°metro, s el tipo de contrase√±a que pide el usuario
        letras              -- str  -- Todas las letras que pueden agregarse a la contrase√±a
        numeros             -- str  -- Todos los numeros que pueden agregarse a la contrase√±a
        especiales          -- str  -- Todos los caracteres especiales que pueden agregarse a la contrase√±a
        todos_caracteres    -- str  -- Es la concatenaci√≥n de letras, numeros y especiales
        numeros_especiales  -- str  -- Es la concatenaci√≥n de n√∫meros y especiales
        letras_numeros      -- str  -- Es la concatenaci√≥n de letras y n√∫meros
        letras_especiales   -- str  -- Es la concatenaci√≥n de letras y especiales 
        result_contrase√±a   -- str  -- Es el resultado final de la contrase√±a generada
        
    Retorna result_contrase√±a. El cu√°l es el resultado del generador de contrase√±as
    
    """
    letras: str = string.ascii_letters
    numeros: str = string.digits
    especiales: str = string.punctuation
    todos_caracteres: str = letras + numeros + especiales
    numeros_especiales: str = numeros + especiales
    letras_numeros: str = letras + numeros
    letras_especiales: str = letras + especiales
    result_contrase√±a: str = ""
    if tipo[0] == 1 and tipo[1] == 1 and tipo[2] == 1:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(todos_caracteres)))
    elif tipo[0] == 0 and tipo[1] == 1 and tipo[2] == 1:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(numeros_especiales)))
    elif tipo[0] == 0 and tipo[1] == 0 and tipo[2] == 1:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(especiales)))
    elif tipo[0] == 1 and tipo[1] == 1 and tipo[2] == 0:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(letras_numeros)))
    elif tipo[0] == 1 and tipo[1] == 0 and tipo[2] == 0:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(letras)))
    elif tipo[0] == 1 and tipo[1] == 0 and tipo[2] == 1:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(letras_especiales)))
    elif tipo[0] == 0 and tipo[1] == 1 and tipo[2] == 0:
        while len(result_contrase√±a) < tama√±o:
            result_contrase√±a += "".join(map(str, secrets.choice(numeros)))
    
    return result_contrase√±a

def run():
    """Nos muestra la secuencia del 'Generador de Contrase√±as'.

        tama√±o      -- int -- Se le asigna el tama√±o de contrase√±a que el usuario eligi√≥  
        tipo        -- str -- Se le asigna el tipo de contrase√±a que el usuario eligi√≥
        contrase√±a  -- str -- Se le asigna la contrase√±a que se genero en base a las peticiones del usuario
        
    
    """
    tama√±o: int = tama√±o_contrase√±a()
    tipo: str = tipo_contrase√±a()
    contrase√±a: str = generando_contrase√±a(tama√±o, tipo)
    print(f"Esta es tu contrase√±a ==> {contrase√±a}")
    print("Gracias por su preferenciaü•∞")

if __name__ == "__main__":
    run()